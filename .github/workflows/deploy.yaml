name: Deploy Infrastructure

on:
  workflow_dispatch:
    inputs:
      terraform_action:
        type: choice
        description: Select Terraform action
        options: [plan, apply, destroy]
        required: true
  push:
    branches: [main]

permissions:
  contents: read
  id-token: write

concurrency:
  group: terraform-${{ github.ref }}
  cancel-in-progress: true

jobs:
  terraform_plan:
    if: github.event.inputs.terraform_action == 'plan' || github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: dev
    env:
      TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
      TF_VAR_Admin_CIDR: ${{ secrets.ADMIN_CIDR }}
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/TerraformGithubActionsRole
          role-session-name: github-actions
      - uses: hashicorp/setup-terraform@v3
        with: { terraform_version: "1.12.2" }
      - run: terraform init -reconfigure
        working-directory: environment/dev
      - run: terraform plan -out=tfplan
        working-directory: environment/dev
      - uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: environment/dev/tfplan

  terraform_apply_or_destroy:
    if: github.event.inputs.terraform_action != 'plan'
    needs: terraform_plan
    runs-on: ubuntu-latest
    environment: dev
    env:
      TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
      TF_VAR_Admin_CIDR: ${{ secrets.ADMIN_CIDR }}
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/TerraformGithubActionsRole
          role-session-name: github-actions
      - uses: hashicorp/setup-terraform@v3
        with: { terraform_version: "1.12.2" }
      - run: terraform init -reconfigure
        working-directory: environment/dev
      - uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: environment/dev
      - run: |
          if [ "${{ github.event.inputs.terraform_action }}" == "apply" ]; then
            terraform apply tfplan
          else
            terraform destroy -auto-approve
          fi
        working-directory: environment/dev
